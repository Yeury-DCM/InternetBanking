@using InternetBanking.Core.Application.ViewModels.UserVMS
@using InternetBanking.Core.Application.Enums
@using InternetBanking.Core.Application.Helpers
@using InternetBanking.Core.Application.Dtos
@inject IHttpContextAccessor httpContextAccessor

@model List<UserViewModel>

@{
    ViewData["Title"] = "Gestión de Usuarios";
    var userLoggedIn = httpContextAccessor.HttpContext!.Session.Get<AuthenticationResponse>("user");
}

<div class="container-fluid px-4">
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">Gestión de Usuarios</h1>

        <a type="button" asp-controller="User" asp-action="Add" class="btn btn-info">
            Crear Nuevo Usuario
        </a>
    </div>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Listado de Usuarios</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-hover" id="dataTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>Nombre Completo</th>
                            <th>Nombre de Usuario</th>
                            <th>Correo Electrónico</th>
                            <th>Cédula</th>
                            <th>Roles</th>
                            <th>Estado</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in Model)
                        {
                            <tr>
                                <td>@user.FirstName @user.LastName</td>
                                <td>@user.UserName</td>
                                <td>@user.Email</td>
                                <td>@user.IdentificationNumber</td>
                                <td>
                                    @foreach (var role in user.Roles)
                                    {
                                        <span class="badge @(role == "Admin" ? "bg-danger" : "bg-primary") me-1">@role</span>
                                    }
                                </td>
                                <td>
                                    <span class="badge @(user.IsActive ? "bg-success" : "bg-warning")">
                                        @(user.IsActive ? "Activo" : "Inactivo")
                                    </span>
                                </td>
                                <td>
                                    <div class="btn-group-sm" role="group">
                                        <a asp-controller="User" asp-action="Edit" asp-route-username="@user.UserName" class="btn btn-info btn-sm mb-1">
                                            Editar
                                        </a>

                                        @if(userLoggedIn.Id != user.Id)
                                        {
                                            <button class="btn @(user.IsActive ? "btn-warning" : "btn-success") btn-sm mb-1"
                                                    onclick="showConfirmModal('@user.UserName', @user.IsActive.ToString().ToLower(), '@user.Id')">
                                                @(user.IsActive ? "Desactivar" : "Activar")
                                            </button>
                                        }
                                      
                                        @if(user.Roles.Any(r => r == Roles.Client.ToString()))
                                        {
                                            <a asp-controller="Product" asp-action="UserProducts" asp-route-username="@user.UserName" class="btn btn-primary btn-sm">
                                                Productos
                                            </a>
                                        }
                                      
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Modal de Confirmación -->
    <div class="modal fade" id="confirmationModal" tabindex="-1" aria-labelledby="confirmationModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="confirmationModalLabel">Confirmar Acción</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body" id="confirmationModalBody">
                    ¿Está seguro?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="button" class="btn btn-primary" id="confirmActionBtn">Confirmar</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Formulario oculto para enviar -->
    <form id="statusChangeForm" method="post">
        <input type="hidden" name="username" id="usernameInput" />
        <input type="hidden" name="userId" id="idInput" />
        <input type="hidden" name="action" id="actionInput" />
    </form>
</div>

@section Scripts {
    <script>
        function showConfirmModal(username, isActive, userId) {
            const action = isActive ? 'desactivar' : 'activar';
            const modalBody = document.getElementById('confirmationModalBody');
            const confirmBtn = document.getElementById('confirmActionBtn');

            // Configurar mensaje
            modalBody.textContent = `¿Está seguro que desea ${action} al usuario ${username}?`;

            // Preparar formulario
            document.getElementById('usernameInput').value = username;
            document.getElementById('idInput').value = userId ;
            document.getElementById('actionInput').value = isActive ? 'Deactivate' : 'Activate';

            // Configurar botón de confirmación
            confirmBtn.onclick = () => {
                document.getElementById('statusChangeForm').action = `/User/${isActive ? 'Deactivate' : 'Activate'}`;
                document.getElementById('statusChangeForm').submit();
            };

            // Mostrar modal
            var confirmModal = new bootstrap.Modal(document.getElementById('confirmationModal'));
            confirmModal.show();
        }
    </script>
}